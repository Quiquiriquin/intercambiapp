[{"/Users/enrique/Documents/intercambiapp/src/context/GeneralContext.js":"1","/Users/enrique/Documents/intercambiapp/src/App.js":"2","/Users/enrique/Documents/intercambiapp/src/components/Registro/RegistroHOC.js":"3","/Users/enrique/Documents/intercambiapp/src/components/Dashboard/DashboardHOC.js":"4","/Users/enrique/Documents/intercambiapp/src/components/Registro/Registro.js":"5","/Users/enrique/Documents/intercambiapp/src/components/Landing/MainCarousel.js":"6","/Users/enrique/Documents/intercambiapp/src/components/Dashboard/Dashboard.js":"7","/Users/enrique/Documents/intercambiapp/src/components/Dashboard/DashboardCard.js":"8","/Users/enrique/Documents/intercambiapp/src/components/Generic/Loading.js":"9","/Users/enrique/Documents/intercambiapp/src/components/Login/LoginHOC.js":"10","/Users/enrique/Documents/intercambiapp/src/index.js":"11","/Users/enrique/Documents/intercambiapp/src/reportWebVitals.js":"12","/Users/enrique/Documents/intercambiapp/src/components/Landing/Landing.js":"13","/Users/enrique/Documents/intercambiapp/src/components/Landing/Steps.js":"14","/Users/enrique/Documents/intercambiapp/src/components/Dashboard/Panels/Intercambio/Intercambio.js":"15","/Users/enrique/Documents/intercambiapp/src/components/Dashboard/Panels/Intercambio/Form/BasicInfo.js":"16","/Users/enrique/Documents/intercambiapp/src/components/Generic/GenericInput.js":"17","/Users/enrique/Documents/intercambiapp/src/components/Navbar/Navbar.js":"18","/Users/enrique/Documents/intercambiapp/src/components/Generic/Lotties.js":"19","/Users/enrique/Documents/intercambiapp/src/components/Dashboard/Panels/Intercambio/IntercambioHOC.js":"20","/Users/enrique/Documents/intercambiapp/src/components/Login/Login.js":"21","/Users/enrique/Documents/intercambiapp/src/components/Dashboard/Panels/Intercambio/Form/Invites.js":"22","/Users/enrique/Documents/intercambiapp/src/components/Dashboard/Panels/Intercambio/Form/Resume.js":"23","/Users/enrique/Documents/intercambiapp/src/Utils/Endpoints.js":"24","/Users/enrique/Documents/intercambiapp/src/components/Landing/Header.js":"25","/Users/enrique/Documents/intercambiapp/src/components/Dashboard/Panels/DetalleIntercambio/DetalleIntercambioHOC.js":"26","/Users/enrique/Documents/intercambiapp/src/components/Dashboard/Panels/DetalleIntercambio/DetalleIntercambio.js":"27","/Users/enrique/Documents/intercambiapp/src/components/Invitaciones/InvitacionesHOC.js":"28","/Users/enrique/Documents/intercambiapp/src/components/Invitaciones/Invitaciones.js":"29"},{"size":604,"mtime":1610507350874,"results":"30","hashOfConfig":"31"},{"size":2486,"mtime":1611271617246,"results":"32","hashOfConfig":"31"},{"size":1771,"mtime":1610422273174,"results":"33","hashOfConfig":"31"},{"size":2979,"mtime":1611258019960,"results":"34","hashOfConfig":"31"},{"size":2793,"mtime":1610938118191,"results":"35","hashOfConfig":"31"},{"size":2836,"mtime":1610350832530,"results":"36","hashOfConfig":"31"},{"size":2043,"mtime":1610979069905,"results":"37","hashOfConfig":"31"},{"size":3764,"mtime":1611251570442,"results":"38","hashOfConfig":"31"},{"size":545,"mtime":1610503514669,"results":"39","hashOfConfig":"31"},{"size":2188,"mtime":1611272299797,"results":"40","hashOfConfig":"31"},{"size":605,"mtime":1610507021075,"results":"41","hashOfConfig":"31"},{"size":362,"mtime":1609978834830,"results":"42","hashOfConfig":"31"},{"size":1472,"mtime":1610505164492,"results":"43","hashOfConfig":"31"},{"size":2452,"mtime":1610505914724,"results":"44","hashOfConfig":"31"},{"size":1008,"mtime":1610939634167,"results":"45","hashOfConfig":"31"},{"size":4013,"mtime":1610940477484,"results":"46","hashOfConfig":"31"},{"size":2720,"mtime":1611277837202,"results":"47","hashOfConfig":"31"},{"size":4034,"mtime":1611294585647,"results":"48","hashOfConfig":"31"},{"size":542,"mtime":1609994226649,"results":"49","hashOfConfig":"31"},{"size":3828,"mtime":1611251762838,"results":"50","hashOfConfig":"31"},{"size":1949,"mtime":1610938103327,"results":"51","hashOfConfig":"31"},{"size":3698,"mtime":1611241926480,"results":"52","hashOfConfig":"31"},{"size":1791,"mtime":1611031219312,"results":"53","hashOfConfig":"31"},{"size":1801,"mtime":1611296892581,"results":"54","hashOfConfig":"31"},{"size":740,"mtime":1610350832530,"results":"55","hashOfConfig":"31"},{"size":1822,"mtime":1611260320447,"results":"56","hashOfConfig":"31"},{"size":5527,"mtime":1611278149761,"results":"57","hashOfConfig":"31"},{"size":2451,"mtime":1611295485261,"results":"58","hashOfConfig":"31"},{"size":2401,"mtime":1611294908762,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1w8hiqi",{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/enrique/Documents/intercambiapp/src/context/GeneralContext.js",[],["131","132"],"/Users/enrique/Documents/intercambiapp/src/App.js",["133","134","135","136"],"/Users/enrique/Documents/intercambiapp/src/components/Registro/RegistroHOC.js",[],"/Users/enrique/Documents/intercambiapp/src/components/Dashboard/DashboardHOC.js",["137","138","139"],"import React, { useEffect, useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {GeneralContext} from '../../context/GeneralContext';\nimport Dashboard from './Dashboard';\nimport thinking from '../../assets/imgs/lotties/thinking.json';\nimport invite from '../../assets/imgs/lotties/invite-sec.json';\nimport wish from '../../assets/imgs/lotties/wish.json';\nimport './Dashboard.css';\nimport {toast} from 'react-toastify';\nimport {DELETE_EXCHANGE, EXCHANGES, FRIENDS} from '../../Utils/Endpoints';\n\nconst DashboardHoc = () => {\n  const { user, updateLoading } = useContext(GeneralContext);\n  const history = useHistory();\n  const [exchanges, setExchanges] = useState(null);\n  const [friends, setFriends] = useState(null);\n  const [reload, setReload] = useState(false);\n  const [categories, setCategories] = useState(null);\n  useEffect(() => {\n    if (user) {\n      console.log(user);\n    } else {\n      history.push('/login');\n    }\n  });\n\n  useEffect(() => {\n\n    const getExchanges = async () => {\n      try {\n        console.log('Buscando');\n        const { data } = await EXCHANGES();\n        setExchanges(data.exchanges);\n        updateLoading(false);\n      } catch (e) {\n        console.log(e);\n        updateLoading(false);\n        toast.error('Error al obtener tus intercambios. Intenta de nuevo.');\n      }\n    };\n\n    const getFriends = async () => {\n      try {\n        // const ids = exchanges.map((elem) => elem.idUser);\n        const { data } = await FRIENDS(user.id);\n        setFriends(data.invitations);\n        setCategories(data.categories);\n        updateLoading(false);\n      } catch (e) {\n        console.log(e);\n        updateLoading(false);\n        toast.error('Error al obtener tus intercambios. Intenta de nuevo.');\n      }\n    };\n\n    if (!exchanges || reload) {\n      updateLoading(true);\n      getExchanges();\n    }\n\n    if((exchanges && !friends)) {\n      updateLoading(true);\n      getFriends();\n    }\n\n  }, [exchanges, reload]);\n\n  console.log(exchanges);\n\n  const cards = [\n    {\n      animation: thinking,\n      title: 'Tus intercambios',\n      text: '¿Aún no has planeado tu intercambio?',\n      buttonTitle: 'Organízalo ahora',\n      linkButton: 'dashboard/nuevo/intercambio',\n    },\n    {\n      animation: invite,\n      title: 'Tus amigos',\n      text: 'Invita a tus amigos, entre más sean, mejor la pasarán',\n      buttonTitle: 'Invitar amigos',\n      linkButton: 'nuevo/intercambio',\n    },\n    {\n      animation: wish,\n      title: 'Tus deseos',\n      text: 'Selecciona tus categorías favoritas para tu regalo',\n      buttonTitle: 'Seleccionar',\n      linkButton: 'nuevo/intercambio',\n    },\n  ];\n\n  return (\n    <Dashboard\n      friends={friends && friends.length > 0 ? friends : null}\n      categories={categories && categories.length > 0 ? categories : null}\n      exchanges={exchanges && exchanges.length > 0 ? exchanges : null}\n      cards={cards}\n\n    />\n  );\n};\n\nexport default DashboardHoc;\n","/Users/enrique/Documents/intercambiapp/src/components/Registro/Registro.js",["140"],"import React from 'react';\nimport {Input} from 'antd';\nimport GenericInput from '../Generic/GenericInput';\n\nconst Registro = ({ handleSubmit, submitFunction, control, rules, errors, isValid }) => {\n    console.log(errors);\n    return (\n        <div className={'container-fluid full-height gray-bg'}>\n            <div className={'d-flex align-items-center align-content-center'} style={{ height: '92vh' }}>\n                <div className={'register-card white-bg'}>\n                    <div className={'text-center fz-24 fw-400'}>\n                        Regístrate\n                    </div>\n                    <form onSubmit={handleSubmit(submitFunction)}>\n                        <GenericInput\n                            errors={errors}\n                            defaultValue={null}\n                            control={control}\n                            rules={rules.name}\n                            name={'name'}\n                            label={'Nombre'}\n                            placeholder={'Juan'}\n                            />\n                        <GenericInput\n                            errors={errors}\n                            defaultValue={null}\n                            control={control}\n                            rules={rules.lastname}\n                            name={'lastname'}\n                            label={'Apellido'}\n                            placeholder={'Pérez'}\n                        />\n                        <GenericInput\n                            errors={errors}\n                            defaultValue={null}\n                            control={control}\n                            rules={rules.email}\n                            name={'email'}\n                            label={'Correo electrónico'}\n                            placeholder={'juan.perez@example.com'}\n                        />\n                        <GenericInput\n                            errors={errors}\n                            defaultValue={null}\n                            control={control}\n                            rules={rules.password}\n                            name={'password'}\n                            label={'Contraseña'}\n                            type={'password'}\n                            placeholder={'Tu contraseña...'}\n                        />\n                        <div className={'mt-4'}>\n                            <button type={'submit'} disabled={!isValid} className={'btn w-100' +\n                            ' white-font' +\n                            ' main-green'}>\n                                Registrarme\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Registro;\n",["141","142"],"/Users/enrique/Documents/intercambiapp/src/components/Landing/MainCarousel.js",[],["143","144"],"/Users/enrique/Documents/intercambiapp/src/components/Dashboard/Dashboard.js",["145","146","147"],"import React, { useContext, useEffect } from 'react';\nimport {GeneralContext} from '../../context/GeneralContext';\nimport Lotties from '../Generic/Lotties';\nimport thinking from '../../assets/imgs/lotties/thinking.json';\nimport DashboardCard from './DashboardCard';\nimport {useHistory} from 'react-router-dom';\n\nconst Dashboard = ({ cards, exchanges, friends, categories }) => {\n  const { user, updateUser } = useContext(GeneralContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!user && !localStorage.getItem('user')) {\n      history.push('/login');\n    }\n    if (localStorage.getItem('user') && !user) {\n      updateUser(JSON.parse(localStorage.getItem('user')));\n      console.log();\n    } else {\n      console.log('No hay');\n      console.log(history);\n    }\n  }, [user]);\n\n  return (\n    <div className={'mt-3 container-fluid pb-5'}>\n      <div className={'text-center'}>\n        <h1>¡Bienvenido { user ? user.name : '' }!</h1>\n        <div className={'fz-18'}>\n          Intercambiapp es la mejor aplicación <br /> para organizar un intercambio\n        </div>\n        <div className={'mt-3'}>\n          <button onClick={() => history.push('/dashboard/nuevo/intercambio')} className={'action-btn main-green white-font'}>\n            Nuevo intercambio\n          </button>\n        </div>\n      </div>\n\n      <div className={'mt-4'}>\n        <div className={'row gx-5'}>\n          {\n            cards &&\n              cards.map(({animation, title, text, buttonTitle, linkButton}, index) =>\n                <DashboardCard\n                  content={index === 0 ? exchanges : null}\n                  key={index}\n                  friends={index === 1 ? friends : null}\n                  animation={animation}\n                  title={title}\n                  text={text}\n                  categories={index === 2 ? categories : null}\n                  button={buttonTitle}\n                  linkButton={linkButton}\n                />)\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n",["148","149"],"/Users/enrique/Documents/intercambiapp/src/components/Dashboard/DashboardCard.js",[],"/Users/enrique/Documents/intercambiapp/src/components/Generic/Loading.js",[],"/Users/enrique/Documents/intercambiapp/src/components/Login/LoginHOC.js",[],"/Users/enrique/Documents/intercambiapp/src/index.js",[],"/Users/enrique/Documents/intercambiapp/src/reportWebVitals.js",[],"/Users/enrique/Documents/intercambiapp/src/components/Landing/Landing.js",[],["150","151"],"/Users/enrique/Documents/intercambiapp/src/components/Landing/Steps.js",[],"/Users/enrique/Documents/intercambiapp/src/components/Dashboard/Panels/Intercambio/Intercambio.js",["152","153","154","155","156"],"/Users/enrique/Documents/intercambiapp/src/components/Dashboard/Panels/Intercambio/Form/BasicInfo.js",["157"],"import React from 'react';\nimport GenericInput from '../../../../Generic/GenericInput';\nimport { Select, Button } from 'antd';\n\nconst Option = Select.Option;\n\nconst BasicInfo = ({ errors, navigation, children, control, handleSubmit, submitForm }) => {\n  const { next } = navigation;\n  console.log(control);\n  return (\n    <div className={'container-fluid mt-4 black-font pb-4 form-container'}>\n      <div className={'fz-24 bold fw-700'}>\n        Información del evento\n      </div>\n      <div className={'gray-font'}>\n        ¡Tranquilo! Podrás revisar toda la información antes de enviar las invitaciones\n      </div>\n      <div className={''}>\n        {/*<form onSubmit={handleSubmit(submitForm)}>*/}\n          <GenericInput\n            label={'Nombre del intercambio'}\n            placeholder={'Intercambio asombroso'}\n            name={'name'}\n            customClass={'step-class-input'}\n            labelClass={'main-input-label'}\n            control={control}\n            errors={errors}\n          />\n          <div className={'mt-5'}>\n            <GenericInput\n              label={'Fecha del intercambio'}\n              name={'date'}\n              customClass={'step-class-input label-contain w-100'}\n              labelClass={'sec-input-label gray-font'}\n              type={'date'}\n              control={control}\n              errors={errors}\n            />\n            <GenericInput\n              label={'Fecha límite de confirmación'}\n              name={'reservationLimit'}\n              customClass={'step-class-input label-contain w-100'}\n              labelClass={'sec-input-label gray-font'}\n              type={'date'}\n              errors={errors}\n              control={control}\n            />\n          </div>\n      {/*    <div className={'mt-5'}>*/}\n      {/*      <GenericInput*/}\n      {/*  name={'participate'}*/}\n      {/*  customClass={'d-flex flex-column fz-18'}*/}\n      {/*  type={'radio'}*/}\n      {/*  labelClass={'main-input-label'}*/}\n      {/*  optionClass={'fz-18'}*/}\n      {/*  label={'¿Participarás en el intercambio?'}*/}\n      {/*  onChange={setForm}/>*/}\n      {/*</div>*/}\n          <div className={'mt-5'}>\n            <GenericInput\n              name={'budget'}\n              defaultValue={250}\n              type={'currency'}\n              labelClass={'main-input-label'}\n              customClass={'step-class-input w-100'}\n              label={'Establece el presupuesto'}\n              errors={errors}\n              control={control}/>\n          </div>\n          <div className={'mt-5'}>\n            <GenericInput\n              control={control}\n              name={'category'}\n              type={'select'}\n              placeholder={'¿Qué regalos serán permitidos?'}\n              labelClass={'main-input-label'}\n              customClass={'step-class-input w-100'}\n              label={'Categoría de regalos'}\n              errors={errors}\n              children={\n                children ?\n                  children.map((option, index) => (\n                    <Option value={option.id} key={index}>\n                      { option.name }\n                    </Option>\n                  ))\n                  : []\n              }\n            />\n          </div>\n          <div className={'mt-5'}>\n            <GenericInput\n              name={'observations'}\n              control={control}\n              type={'area'}\n              errors={errors}\n              placeholder={'Añade los información adicional...'}\n              labelClass={'main-input-label'}\n              customClass={'step-class-input w-100'}\n              label={'Comentarios adicionales'} />\n          </div>\n          <div className={'mt-5'}>\n            <Button htmlType={'submit'} size={'large'} className={'main-green' +\n            ' white-font' +\n            ' w-100'} style={{ borderRadius: '5px', borderColor: 'teal' }}>\n              Siguiente\n            </Button>\n          </div>\n        {/*</form>*/}\n      </div>\n    </div>\n  );\n};\n\nexport default BasicInfo;\n","/Users/enrique/Documents/intercambiapp/src/components/Generic/GenericInput.js",[],"/Users/enrique/Documents/intercambiapp/src/components/Navbar/Navbar.js",[],"/Users/enrique/Documents/intercambiapp/src/components/Generic/Lotties.js",[],"/Users/enrique/Documents/intercambiapp/src/components/Dashboard/Panels/Intercambio/IntercambioHOC.js",["158","159","160"],"import React, { useEffect, useState, useContext } from 'react';\nimport Intercambio from './Intercambio';\nimport './Intercambio.css';\nimport {useStep} from 'react-hooks-helper';\nimport {useForm} from 'react-hook-form';\nimport {CATEGORIES, FRIENDS, NEW_EXCHANGE} from '../../../../Utils/Endpoints';\nimport {toast} from 'react-toastify';\nimport { useHistory } from 'react-router-dom';\nimport {GeneralContext} from '../../../../context/GeneralContext';\n\nconst IntercambioHoc = () => {\n  const { updateLoading, user } = useContext(GeneralContext);\n  const history = useHistory();\n  const steps = [\n    { id: 'Basics' },\n    { id: 'Invites' },\n    { id: 'Review' },\n  ];\n  const [exchangeInfo, setExchangeInfo] = useState(null);\n  const [friends, setFriends] = useState(null);\n  const [invites, setInvites] = useState(null);\n  const { step, navigation } = useStep({ initialStep: 0, steps });\n  const { id } = step;\n  const [options, setOptions] = useState(null);\n  const { control, errors, handleSubmit, formState: { isValid } } = useForm({\n    mode: 'all',\n  });\n  useEffect(() => {\n\n    const getCategories = async () => {\n      try {\n        const { data } = await CATEGORIES();\n        setOptions(data.categories);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    if (options === null) {\n      getCategories();\n    }\n\n  }, [options]);\n\n  const onSubmitForm = async (data) => {\n    if (id === 'Basics') {\n      console.log(data);\n      setExchangeInfo(data);\n      console.log('Basicos');\n      navigation.next();\n    }\n    if (id === 'Invites') {\n      const names = [];\n      const emails = [];\n      const { pastFriends, ...users } = data;\n      console.log(users);\n      Object.keys(users).map((elem, index) => {\n        if (elem !== 'pastFriends') {\n          if (elem.includes('name')) {\n            names.push(data[elem]);\n          }\n          if (elem.includes('email')) {\n            emails.push(data[elem]);\n          }\n        }\n      });\n      if (pastFriends) {\n        pastFriends.forEach((elem) => {\n          const index = friends.findIndex((element) => element.email === elem);\n          names.push(friends[index].name);\n          emails.push(friends[index].email);\n        });\n      }\n      setInvites({\n        names, emails,\n      });\n      navigation.next();\n    }\n    if (id === 'Review') {\n      try {\n        console.log(exchangeInfo);\n        console.log(exchangeInfo.reservationLimit.format('YYYY-MM-DD'));\n        exchangeInfo.date = exchangeInfo.date.format('YYYY-MM-DD');\n        exchangeInfo.reservationLimit = exchangeInfo.reservationLimit.format('YYYY-MM-DD');\n        updateLoading(true);\n        await NEW_EXCHANGE({\n          ...exchangeInfo,\n          invitations: invites\n        });\n        updateLoading(false);\n        toast.success('Intercambio creado correctamente')\n        history.push('/dashboard');\n      } catch (e) {\n        updateLoading(false);\n        console.log(e);\n      }\n    }\n\n  };\n\n  useEffect(() => {\n    const getFriends = async () => {\n      try {\n        // const ids = exchanges.map((elem) => elem.idUser);\n        const { data } = await FRIENDS(user.id);\n        setFriends(data.invitations);\n        //setCategories(data.categories);\n        updateLoading(false);\n      } catch (e) {\n        console.log(e);\n        updateLoading(false);\n        toast.error('Error al obtener tus intercambios. Intenta de nuevo.');\n      }\n    };\n    if (friends === null) {\n      updateLoading(true);\n      getFriends();\n    }\n  }, [friends]);\n\n  const inputProps = { navigation, children: options, control, errors};\n  const generalProps = { handleSubmit, id, submitForm: onSubmitForm };\n  return (\n    <Intercambio infoProps={{ exchangeInfo, invites }} generalProps={generalProps} inputProps={inputProps} friends={friends}/>\n  );\n};\n\nexport default IntercambioHoc;\n","/Users/enrique/Documents/intercambiapp/src/components/Login/Login.js",[],"/Users/enrique/Documents/intercambiapp/src/components/Dashboard/Panels/Intercambio/Form/Invites.js",["161"],"import React, { useState } from 'react';\nimport GenericInput from '../../../../Generic/GenericInput';\nimport {Button, Select} from 'antd';\nimport { UserAddOutlined } from '@ant-design/icons';\n\nconst { Option } = Select;\n\nconst Invites = ({ navigation, children, control, errors, friends }) => {\n\n  const [inputs, setInputs] = useState([{ name: '', email: '' }]);\n  const { next } = navigation;\n\n  const addInput = async () => {\n    setInputs((prev) => [...prev, { name: '', email: '' }])\n  };\n\n  return (\n    <div className={'container-fluid mt-4 black-font pb-4 form-container'}>\n      <div className={'fz-24 bold fw-700'}>\n        Invita a tus amigos\n      </div>\n      <div className={'gray-font'}>\n        Ya tenemos casi todo preparado para tu intercambio. ¡Solo faltan tus amigos! <br /> Añade su dirección de correo electrónico y nombre para que puedan participar.\n      </div>\n      <div className={''}>\n        <GenericInput\n          control={control}\n          name={'pastFriends'}\n          type={'select'}\n          placeholder={'Selecciona...'}\n          labelClass={'main-input-label'}\n          customClass={'step-class-input w-100'}\n          label={'Invita a tus ammigos ya registrados'}\n          errors={errors}\n          children={\n            friends ?\n              friends.map((option, index) => (\n                <Option value={option.email} key={index}>\n                  <div className={''}>\n                    { option.name }\n                  </div>\n                  <div className={'select-email'}>\n                    { option.email }\n                  </div>\n                </Option>\n              ))\n              : []\n          }\n        />\n          <div className={'row'}>\n\n              {\n                inputs.map((input, index) => (\n                  <div className={'col-12'} key={index}>\n                    <div className={'row'}>\n                      <div className={'col-6'}>\n                        <GenericInput\n                          errors={errors}\n                          control={control}\n                          defaultValue={input.name}\n                          label={index > 0 ? null : 'Nombre'}\n                          placeholder={''}\n                          name={`user-name-${index}`}\n                          customClass={'step-class-input'}\n                          labelClass={'sec-input-label'}\n                        />\n                      </div>\n\n                      <div className={'col-6'}>\n                        <GenericInput\n                          errors={errors}\n                          defaultValue={input.email}\n                          label={index > 0 ? null : 'Correo electrónico'}\n                          placeholder={''}\n                          name={`user-email-${index}`}\n                          customClass={'step-class-input'}\n                          labelClass={'sec-input-label'}\n                          control={control}\n                        />\n                      </div>\n                    </div>\n\n                    </div>\n\n                ))\n              }\n              <div className={'mt-3 text-center'}>\n                <Button onClick={addInput} className={'signup-button'} size={'large'} icon={<UserAddOutlined/>}>\n                  Agregar amigo\n                </Button>\n              </div>\n          </div>\n          <div className={'mt-5'}>\n            <Button htmlType={'submit'} size={'large'} className={'main-green' +\n            ' white-font' +\n            ' w-100'} style={{ borderRadius: '5px', borderColor: 'teal' }}>\n              Siguiente\n            </Button>\n          </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Invites;\n","/Users/enrique/Documents/intercambiapp/src/components/Dashboard/Panels/Intercambio/Form/Resume.js",["162","163","164"],"import React, { useState, useEffect } from 'react';\nimport { Button } from 'antd';\nimport DetalleIntercambio from '../../DetalleIntercambio/DetalleIntercambio';\n\nconst Resume = ({ navigation, exchangeInfo, invites }) => {\n  const { go } = navigation;\n  const [exchange, setEchange] = useState(null)\n\n  console.log(exchangeInfo);\n  console.log(invites);\n\n  useEffect(() => {\n    if (!exchange) {\n      const { category, ...info } = exchangeInfo;\n      const Invitations = [];\n      const Categories = [];\n      invites.names.forEach((name, index) => {\n        Invitations.push({\n          name,\n          email: invites.emails[index],\n        });\n      });\n      category.forEach((cat) => {\n        Categories.push({\n          name: cat,\n        });\n      });\n      console.log(Categories);\n      console.log(Invitations);\n      console.log(info);\n      setEchange({\n        Categories,\n        Invitations,\n        ...info\n      })\n      console.log('No hay, hay que construir el objeto');\n    }\n  }, [exchange]);\n\n  const createExchange = () => {\n    // console.log(formData);\n  };\n\n  return (\n    <div className={'container-fluid'}>\n      <div className={'fz-32'}>\n        Resumen\n      </div>\n      <div className={'gray-font'}>\n        Casi esta listo todo. Revisa que los detalles sean correctos.\n      </div>\n      <DetalleIntercambio resume={true} exchange={exchange} />\n      <div className={'fz-18 mt-5 text-center mx-auto w-50'}>\n        ¿Todo esta correcto? <br /> Da click en el botón de abajo y que comience la diversión\n      </div>\n      <div className={'mt-5'}>\n        <Button className={'main-green' +\n        ' white-font' +\n        ' w-100'} htmlType={'submit'} size={'large'}>\n          Crear\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Resume;\n","/Users/enrique/Documents/intercambiapp/src/Utils/Endpoints.js",[],"/Users/enrique/Documents/intercambiapp/src/components/Landing/Header.js",[],"/Users/enrique/Documents/intercambiapp/src/components/Dashboard/Panels/DetalleIntercambio/DetalleIntercambioHOC.js",[],"/Users/enrique/Documents/intercambiapp/src/components/Dashboard/Panels/DetalleIntercambio/DetalleIntercambio.js",["165","166"],"import React from 'react';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from 'antd';\n\nconst DetalleIntercambio = ({ exchange, resume, deleteFunction, pairs, invite }) => {\n  const history = useHistory();\n  console.log(pairs);\n\n  const InformationLabel = ({ label, data, custom }) => (\n    <div className={`detail-container ${custom}`}>\n      <div className={'data-label'}>\n        { label }\n      </div>\n      <div className={'data-value text-ellipsis'}>\n        { data }\n      </div>\n    </div>\n  );\n\n  return (\n    <div className={`${!invite ? 'container-fluid' : ''} pb-5`}>\n      {\n        !resume && !invite &&\n        <div className={'mt-3 mb-3 hover-pointer d-inline'}>\n          <i className={'bi-arrow-left-circle-fill fz-24'} onClick={() => history.push('/dashboard')} style={{ color: 'teal' }} /> Regresar\n        </div>\n      }\n      {\n        exchange &&\n          <div>\n            <div className={'bold fz-32'}>\n              { exchange.name }\n            </div>\n            {\n              !resume && <InformationLabel label={'Código'} data={exchange.key} />\n            }\n            <div className={'d-flex flex-wrap'}>\n              <InformationLabel\n                label={'Fecha del intercambio'}\n                data={resume ? exchange.date.format('DD/MM/YYYY') : moment(exchange.date).format('DD/MM/YYYY')}\n                custom={'me-3'} />\n              <InformationLabel\n                label={'Fecha límite de confirmación'}\n                data={resume ? exchange.reservationLimit.format('DD/MM/YYYY') : moment(exchange.date).format('DD/MM/YYYY')} />\n            </div>\n            {\n              !resume &&\n                <div className={'d-flex flex-wrap'}>\n                  <InformationLabel label={'Organizador'} data={`${exchange.User.name} ${exchange.User.lastname}`} custom={'me-3'} />\n                  <InformationLabel label={'Contacto'} data={exchange.User.email} />\n                </div>\n            }\n            <div className={'categories-container mb-3'}>\n              <div className={'fz-28 bold'}>\n                Categoría del intercambio\n              </div>\n              {\n                (exchange.Categories && exchange.Categories.length > 0) ?\n                  exchange.Categories.map((cat, index) => (\n                    <div className={'fz-20'} key={index}>\n                      { cat.name }\n                    </div>\n                  ))\n                  : 'Parece que no hay categorías en este intercambio'\n              }\n            </div>\n            <div className={'categories-container'}>\n              <div className={'fz-28 bold'}>\n                Participantes\n              </div>\n              <div className={'row gx-5 data-label fz-18 mb-1'}>\n                <div className={'col-4'}>\n                  Nombre\n                </div>\n                <div className={'col-4'}>\n                  Correo\n                </div>\n                {\n                  !resume &&\n                  <div className={'col-4'}>\n                    Confirmado\n                  </div>\n                }\n              </div>\n              {\n                (exchange.Invitations && exchange.Invitations.length > 0) ?\n                  exchange.Invitations.map((invite, index) => (\n                    <div className={'row gx-5'} key={index}>\n                      <div className={'col-4 text-ellipsis'}>\n                        { invite.name }\n                      </div>\n                      <div className={'col-4 text-ellipsis'}>\n                        { invite.email }\n                      </div>\n                      {\n                        !resume &&\n                        <div className={'col-4'}>\n                          { invite.confirmed ? <i className={'bi-check-circle'} /> : <i className={'bi-x-circle'} />}\n                        </div>\n                      }\n                    </div>\n                  ))\n                  : 'Parece que no hay amigos en este intercambio'\n              }\n            </div>\n\n            <div className={'categories-container mt-3'}>\n              <div className={'fz-28 bold'}>\n                Parejas de intercambio\n              </div>\n              {\n                !pairs || pairs.length === 0 && 'Aún no se han creado las parejas para el' +\n                ' intercambio'\n              }\n              { pairs && pairs.length > 0 && <div className={'row gx-5 data-label fz-18 mb-1'}>\n                <div className={'col-6'}>\n                  De\n                </div>\n                <div className={'col-6'}>\n                  Para\n                </div>\n              </div>}\n              {\n                (pairs && pairs.length > 0) ?\n                  pairs.map((pair, index) => (\n                    <div className={'row gx-5'} key={index}>\n                      <div className={'col-6 text-ellipsis'}>\n                        { pair.fromInvite.name }\n                      </div>\n                      <div className={'col-6 text-ellipsis'}>\n                        { pair.toInvite.name }\n                      </div>\n                    </div>\n                  ))\n                  : ''\n              }\n            </div>\n          </div>\n      }\n\n      {\n        !resume && !invite &&\n        <div className={'mt-5'}>\n          <Button onClick={() => deleteFunction(exchange.id)} className={'delete-button w-100'} size={'medium'}>Eliminar</Button>\n        </div>\n      }\n    </div>\n  );\n};\n\nexport default DetalleIntercambio;\n","/Users/enrique/Documents/intercambiapp/src/components/Invitaciones/InvitacionesHOC.js",[],"/Users/enrique/Documents/intercambiapp/src/components/Invitaciones/Invitaciones.js",[],{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":1,"column":29,"nodeType":"173","messageId":"174","endLine":1,"endColumn":38},{"ruleId":"171","severity":1,"message":"175","line":22,"column":9,"nodeType":"173","messageId":"174","endLine":22,"endColumn":16},{"ruleId":"171","severity":1,"message":"176","line":23,"column":20,"nodeType":"173","messageId":"174","endLine":23,"endColumn":30},{"ruleId":"171","severity":1,"message":"177","line":23,"column":32,"nodeType":"173","messageId":"174","endLine":23,"endColumn":36},{"ruleId":"171","severity":1,"message":"178","line":10,"column":9,"nodeType":"173","messageId":"174","endLine":10,"endColumn":24},{"ruleId":"171","severity":1,"message":"179","line":17,"column":18,"nodeType":"173","messageId":"174","endLine":17,"endColumn":27},{"ruleId":"180","severity":1,"message":"181","line":66,"column":6,"nodeType":"182","endLine":66,"endColumn":25,"suggestions":"183"},{"ruleId":"171","severity":1,"message":"184","line":2,"column":9,"nodeType":"173","messageId":"174","endLine":2,"endColumn":14},{"ruleId":"167","replacedBy":"185"},{"ruleId":"169","replacedBy":"186"},{"ruleId":"167","replacedBy":"187"},{"ruleId":"169","replacedBy":"188"},{"ruleId":"171","severity":1,"message":"189","line":3,"column":8,"nodeType":"173","messageId":"174","endLine":3,"endColumn":15},{"ruleId":"171","severity":1,"message":"190","line":4,"column":8,"nodeType":"173","messageId":"174","endLine":4,"endColumn":16},{"ruleId":"180","severity":1,"message":"191","line":23,"column":6,"nodeType":"182","endLine":23,"endColumn":12,"suggestions":"192"},{"ruleId":"167","replacedBy":"193"},{"ruleId":"169","replacedBy":"194"},{"ruleId":"167","replacedBy":"195"},{"ruleId":"169","replacedBy":"196"},{"ruleId":"171","severity":1,"message":"197","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":25},{"ruleId":"171","severity":1,"message":"172","line":1,"column":27,"nodeType":"173","messageId":"174","endLine":1,"endColumn":36},{"ruleId":"171","severity":1,"message":"198","line":3,"column":9,"nodeType":"173","messageId":"174","endLine":3,"endColumn":16},{"ruleId":"171","severity":1,"message":"199","line":5,"column":9,"nodeType":"173","messageId":"174","endLine":5,"endColumn":19},{"ruleId":"171","severity":1,"message":"200","line":8,"column":10,"nodeType":"173","messageId":"174","endLine":8,"endColumn":17},{"ruleId":"171","severity":1,"message":"201","line":8,"column":11,"nodeType":"173","messageId":"174","endLine":8,"endColumn":15},{"ruleId":"171","severity":1,"message":"202","line":25,"column":55,"nodeType":"173","messageId":"174","endLine":25,"endColumn":62},{"ruleId":"203","severity":1,"message":"204","line":57,"column":44,"nodeType":"205","messageId":"206","endLine":57,"endColumn":46},{"ruleId":"180","severity":1,"message":"207","line":119,"column":6,"nodeType":"182","endLine":119,"endColumn":15,"suggestions":"208"},{"ruleId":"171","severity":1,"message":"201","line":11,"column":11,"nodeType":"173","messageId":"174","endLine":11,"endColumn":15},{"ruleId":"171","severity":1,"message":"209","line":6,"column":11,"nodeType":"173","messageId":"174","endLine":6,"endColumn":13},{"ruleId":"180","severity":1,"message":"210","line":38,"column":6,"nodeType":"182","endLine":38,"endColumn":16,"suggestions":"211"},{"ruleId":"171","severity":1,"message":"212","line":40,"column":9,"nodeType":"173","messageId":"174","endLine":40,"endColumn":23},{"ruleId":"213","severity":1,"message":"214","line":113,"column":24,"nodeType":"215","messageId":"216","endLine":113,"endColumn":26},{"ruleId":"213","severity":1,"message":"214","line":113,"column":46,"nodeType":"215","messageId":"216","endLine":113,"endColumn":48},"no-native-reassign",["217"],"no-negated-in-lhs",["218"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'updateUser' is assigned a value but never used.","'user' is assigned a value but never used.","'DELETE_EXCHANGE' is defined but never used.","'setReload' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'friends', 'updateLoading', and 'user.id'. Either include them or remove the dependency array.","ArrayExpression",["219"],"'Input' is defined but never used.",["217"],["218"],["217"],["218"],"'Lotties' is defined but never used.","'thinking' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'updateUser'. Either include them or remove the dependency array.",["220"],["217"],["218"],["217"],["218"],"'useState' is defined but never used.","'useStep' is defined but never used.","'CATEGORIES' is defined but never used.","'useForm' is defined but never used.","'next' is assigned a value but never used.","'isValid' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'updateLoading' and 'user.id'. Either include them or remove the dependency array.",["221"],"'go' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'exchangeInfo', 'invites.emails', and 'invites.names'. Either include them or remove the dependency array.",["222"],"'createExchange' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","no-global-assign","no-unsafe-negation",{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},"Update the dependencies array to be: [exchanges, friends, reload, updateLoading, user.id]",{"range":"231","text":"232"},"Update the dependencies array to be: [history, updateUser, user]",{"range":"233","text":"234"},"Update the dependencies array to be: [friends, updateLoading, user.id]",{"range":"235","text":"236"},"Update the dependencies array to be: [exchange, exchangeInfo, invites.emails, invites.names]",{"range":"237","text":"238"},[1973,1992],"[exchanges, friends, reload, updateLoading, user.id]",[788,794],"[history, updateUser, user]",[3494,3503],"[friends, updateLoading, user.id]",[1001,1011],"[exchange, exchangeInfo, invites.emails, invites.names]"]